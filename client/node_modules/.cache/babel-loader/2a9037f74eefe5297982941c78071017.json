{"ast":null,"code":"var _jsxFileName = \"/Users/williamjantscher/Z_Prefix_App/z_prefix_blog/client/src/_Post_creation_page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst port = \"http://localhost:3001\";\n\nfunction _Post_creation_page() {\n  _s();\n\n  const navigate = useNavigate();\n  const [postTitle, setPostTitle] = useState('');\n  const [postContent, setPostContent] = useState('');\n\n  const makePost = () => {\n    // console.log(postTitle + postContent);\n    let date = new Date();\n    let formatted_date = date.toISOString().split('T')[0];\n    let body = {\n      userId: localStorage.getItem(\"id\"),\n      title: postTitle,\n      content: postContent,\n      date: formatted_date\n    };\n\n    if (postTitle !== \"\" && postContent !== \"\") {\n      //check if user authenticated before posting\n      Axios.get(`${port}/isUserAuth`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        // console.log(res.data);\n        if (res.data) {\n          //post to db if user authenticated\n          Axios.post(`${port}/api/post`, body).then(navigate(\"/myposts\"));\n        } else {\n          console.log(\"user not authorized\");\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post_creation_page>\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Produce for Consumption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-md-center pb-2 pt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"col-md-1 pt-2\",\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            height: '35px',\n            fontSize: '15px',\n            borderRadius: '3px'\n          },\n          className: \"col-md-3\",\n          id: \"title\",\n          name: \"Title\",\n          placeholder: \"Title\",\n          onChange: e => {\n            setPostTitle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container pt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: {\n          height: '250px',\n          fontSize: '15px',\n          borderRadius: '3px'\n        },\n        className: \"col-md-10\",\n        id: \"content\",\n        name: \"Content\",\n        placeholder: \"Content\",\n        onChange: e => {\n          setPostContent(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container pt-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", new Date().toISOString().split('T')[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"\",\n        value: \"\",\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: makePost,\n        children: \"Post This Great Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(_Post_creation_page, \"pTDXh61/drQ0JzRNcZ1B8gXPuK0=\", false, function () {\n  return [useNavigate];\n});\n\nexport default _Post_creation_page; //USER STORIES\n//As a blogger I want to be able to create a new post so that I can share my insights with the world.\n//A post displays title, content, and creation date.\n//After the post is created, the blogger should be redirected to all of their blog posts.\n//will want to alert if inputs not filled if time","map":{"version":3,"sources":["/Users/williamjantscher/Z_Prefix_App/z_prefix_blog/client/src/_Post_creation_page.js"],"names":["React","useState","useEffect","useNavigate","Axios","port","_Post_creation_page","navigate","postTitle","setPostTitle","postContent","setPostContent","makePost","date","Date","formatted_date","toISOString","split","body","userId","localStorage","getItem","title","content","get","headers","then","res","data","post","console","log","height","fontSize","borderRadius","e","target","value","cursor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Axios from 'axios';\n\nconst port = \"http://localhost:3001\"\n\n\nfunction _Post_creation_page()\n{\n    const navigate = useNavigate();\n    const [postTitle, setPostTitle] = useState('');\n    const [postContent, setPostContent] = useState('');\n\n    const makePost = () => {\n        // console.log(postTitle + postContent);\n        let date = new Date();\n        let formatted_date = date.toISOString().split('T')[0];\n\n        let body = {\n            userId: localStorage.getItem(\"id\"),\n            title: postTitle,\n            content: postContent,\n            date: formatted_date\n        }\n\n        if(postTitle !== \"\" && postContent !== \"\") {\n            //check if user authenticated before posting\n            Axios.get(`${port}/isUserAuth`, {headers: {\n                \"x-access-token\": localStorage.getItem(\"token\"),\n                }}).then((res) => {\n                // console.log(res.data);\n                if (res.data) { //post to db if user authenticated\n            Axios.post(`${port}/api/post`,body).then(navigate(\"/myposts\"))\n                } else {    \n                    console.log(\"user not authorized\")\n                }\n            })\n        }\n    }\n\n    return(\n        <div className=\"post_creation_page>\">\n            <h2>Create New Produce for Consumption</h2>\n                <div className='container'>\n                    <div className='row justify-content-md-center pb-2 pt-2'>\n                        <label className='col-md-1 pt-2'>Title: </label>\n                        <input \n                                style={{height:'35px', fontSize:'15px', borderRadius:'3px'}}\n                                className='col-md-3'\n                                id=\"title\"\n                                name=\"Title\"\n                                placeholder=\"Title\"\n                                onChange={(e) => {\n                                    setPostTitle(e.target.value)}}\n                        ></input>\n                    </div>\n                </div>\n                <div className=\"row mb-3\"></div>\n                <div className='container pt-2'>\n                    <textarea \n                            style={{height:'250px', fontSize:'15px', borderRadius:'3px'}}\n                            className=\"col-md-10\"\n                            id=\"content\"\n                            name=\"Content\"\n                            placeholder=\"Content\"\n                            onChange={(e) => {\n                                setPostContent(e.target.value)}}                        \n                    ></textarea>\n                </div>\n                <div className='container pt-2'></div>\n                <div>\n                    <label>Date:\n                        {new Date().toISOString().split('T')[0]}\n                    </label>\n                </div>\n\n                <div>\n                    <button className=\"\" value=\"\" style={{cursor: \"pointer\"}} onClick={makePost}>Post This Great Content</button>\n                </div>\n\n\n        </div>\n    )\n}\n\nexport default _Post_creation_page;\n\n//USER STORIES\n//As a blogger I want to be able to create a new post so that I can share my insights with the world.\n//A post displays title, content, and creation date.\n//After the post is created, the blogger should be redirected to all of their blog posts.\n\n\n//will want to alert if inputs not filled if time"]},"metadata":{},"sourceType":"module"}