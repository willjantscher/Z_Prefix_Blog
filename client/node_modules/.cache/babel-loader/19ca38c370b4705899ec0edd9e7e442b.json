{"ast":null,"code":"import _classCallCheck from\"/Users/williamjantscher/Z_Prefix_App/z_prefix_blog/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/williamjantscher/Z_Prefix_App/z_prefix_blog/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/williamjantscher/Z_Prefix_App/z_prefix_blog/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/williamjantscher/Z_Prefix_App/z_prefix_blog/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component,useState,useEffect}from\"react\";import Axios from'axios';import'./App.css';import TextareaAutosize from'react-textarea-autosize';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var port=\"http://localhost:8080\";var _Content_page=/*#__PURE__*/function(_Component){_inherits(_Content_page,_Component);var _super=_createSuper(_Content_page);function _Content_page(props){var _this;_classCallCheck(this,_Content_page);_this=_super.call(this,props);_this.updateDisplayedPosts=function(){var displayedPosts=[];_this.state.posts.forEach(function(post){var thisPost={id:\"\",user:\"\",title:\"\",content:\"\",creationDate:\"\"};var username=_this.state.usernames.find(function(user){return user.id===post.userId;}).username;var curtailedContent;if(post.content.length>100){curtailedContent=post.content.substring(0,100)+\"...\";}else{curtailedContent=post.content;}thisPost.id=post.id;thisPost.user=username;thisPost.title=post.title;thisPost.content=curtailedContent;thisPost.creationDate=post.creationDate;displayedPosts.push(thisPost);});_this.setState({displayedPosts:displayedPosts});};_this.expandPost=function(e){var expandedText=_this.state.posts.find(function(post){return parseInt(post.id)===parseInt(e.target.id);}).content;var tempDisplayedPosts=_this.state.displayedPosts;var expandedTextIndex=tempDisplayedPosts.findIndex(function(post){return parseInt(post.id)===parseInt(e.target.id);});if(expandedText===e.target.value&&expandedText.length>100){tempDisplayedPosts[expandedTextIndex].content=expandedText.substring(0,100)+\"...\";}else{tempDisplayedPosts[expandedTextIndex].content=expandedText;}_this.setState({displayedPosts:tempDisplayedPosts});e.target.blur();};_this.renderPosts=function(){// console.log(this.state.posts)\nvar output=\"\";if(_this.state.displayedPosts){output=_this.state.displayedPosts.map(function(post){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"col-md-6\",style:{textAlign:\"left\",fontSize:\"28px\"},children:post.title}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"row\",children:[\"- \",post.user]}),/*#__PURE__*/_jsxs(\"label\",{className:\"row\",style:{textAlign:\"right\"},children:[\"Date: \",post.creationDate.substring(0,10)]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row pb-4\",children:/*#__PURE__*/_jsx(TextareaAutosize,{id:post.id,readOnly:true,value:post.content,onFocus:function onFocus(e){_this.expandPost(e);},style:{cursor:\"pointer\"}})})]},post.id),/*#__PURE__*/_jsx(\"div\",{className:\"row mb-3\"},\"\".concat(post.id,\"_space\"))]},\"\".concat(post.id,\"_container\"));});}return/*#__PURE__*/_jsx(\"div\",{children:output});};_this.state={posts:null,usernames:null,displayedPosts:null};return _this;}_createClass(_Content_page,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//fetch all posts here\nAxios.get(\"\".concat(port,\"/api/getallposts\")).then(function(res){_this2.setState({posts:res.data.reverse()});// console.log(this.state.posts)\n}).then(Axios.get(\"\".concat(port,\"/api/getallusers\")).then(function(res){_this2.setState({usernames:res.data});_this2.updateDisplayedPosts();}));}//update property where posts are pulled from when rendering page\n},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"content_page>\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Content for Consumption\"}),function(){switch(_this3.state.posts){case null:return/*#__PURE__*/_jsx(\"div\",{});default:return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(_this3.renderPosts,{})});}}()]});}}]);return _Content_page;}(Component);export default _Content_page;//USER STORIES\n//As a visitor I want to be able to view all posts created by all users so that I can consume content.\n//Unauthenticated users should be able to view all posts, and any single post.\n//The posts should only display the first 100 characters with “...” at the end if they are longer than 100 characters.\n//As a visitor I want to be able to view a specific post created by all users so that I can consume content.\n//Unauthenticated users should be able to view all posts, and any single post.\n//As a blogger I want to be able to view all posts created by all users so that I can see other people’s content.\n//Unauthenticated users should be able to view all posts, and any single post.","map":{"version":3,"sources":["/Users/williamjantscher/Z_Prefix_App/z_prefix_blog/client/src/_Content_page.js"],"names":["React","Component","useState","useEffect","Axios","TextareaAutosize","port","_Content_page","props","updateDisplayedPosts","displayedPosts","state","posts","forEach","post","thisPost","id","user","title","content","creationDate","username","usernames","find","userId","curtailedContent","length","substring","push","setState","expandPost","e","expandedText","parseInt","target","tempDisplayedPosts","expandedTextIndex","findIndex","value","blur","renderPosts","output","map","textAlign","fontSize","cursor","get","then","res","data","reverse"],"mappings":"4iBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,CAAoCC,SAApC,KAAoD,OAApD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,C,wFACA,GAAMC,CAAAA,IAAI,CAAG,uBAAb,C,GAGMC,CAAAA,a,8GACF,uBAAYC,KAAZ,CAAmB,+CACf,uBAAMA,KAAN,EADe,MAuBnBC,oBAvBmB,CAuBI,UAAM,CACzB,GAAIC,CAAAA,cAAc,CAAG,EAArB,CAEA,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,CAAyB,SAAAC,IAAI,CAAI,CAC7B,GAAIC,CAAAA,QAAQ,CAAG,CACXC,EAAE,CAAE,EADO,CAEXC,IAAI,CAAE,EAFK,CAGXC,KAAK,CAAE,EAHI,CAIXC,OAAO,CAAE,EAJE,CAKXC,YAAY,CAAE,EALH,CAAf,CAQA,GAAIC,CAAAA,QAAQ,CAAG,MAAKV,KAAL,CAAWW,SAAX,CAAqBC,IAArB,CAA0B,SAACN,IAAD,CAAU,CAC/C,MAAQA,CAAAA,IAAI,CAACD,EAAL,GAAYF,IAAI,CAACU,MAAzB,CACH,CAFc,EAEZH,QAFH,CAIA,GAAII,CAAAA,gBAAJ,CACA,GAAGX,IAAI,CAACK,OAAL,CAAaO,MAAb,CAAsB,GAAzB,CAA8B,CAC1BD,gBAAgB,CAAGX,IAAI,CAACK,OAAL,CAAaQ,SAAb,CAAuB,CAAvB,CAAyB,GAAzB,EAAgC,KAAnD,CACH,CAFD,IAEO,CACHF,gBAAgB,CAAGX,IAAI,CAACK,OAAxB,CACH,CAEDJ,QAAQ,CAACC,EAAT,CAAcF,IAAI,CAACE,EAAnB,CACAD,QAAQ,CAACE,IAAT,CAAgBI,QAAhB,CACAN,QAAQ,CAACG,KAAT,CAAiBJ,IAAI,CAACI,KAAtB,CACAH,QAAQ,CAACI,OAAT,CAAmBM,gBAAnB,CACAV,QAAQ,CAACK,YAAT,CAAwBN,IAAI,CAACM,YAA7B,CAEAV,cAAc,CAACkB,IAAf,CAAoBb,QAApB,EACH,CA3BD,EA4BA,MAAKc,QAAL,CAAc,CAACnB,cAAc,CAAEA,cAAjB,CAAd,EACH,CAvDkB,OAyDnBoB,UAzDmB,CAyDN,SAACC,CAAD,CAAO,CAChB,GAAIC,CAAAA,YAAY,CAAG,MAAKrB,KAAL,CAAWC,KAAX,CAAiBW,IAAjB,CAAsB,SAACT,IAAD,CAAU,CAC/C,MACImB,CAAAA,QAAQ,CAACnB,IAAI,CAACE,EAAN,CAAR,GAAsBiB,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASlB,EAAV,CADlC,CAGH,CAJkB,EAIhBG,OAJH,CAKA,GAAIgB,CAAAA,kBAAkB,CAAG,MAAKxB,KAAL,CAAWD,cAApC,CACA,GAAI0B,CAAAA,iBAAiB,CAAGD,kBAAkB,CAACE,SAAnB,CAA6B,SAACvB,IAAD,QAAUmB,CAAAA,QAAQ,CAACnB,IAAI,CAACE,EAAN,CAAR,GAAsBiB,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASlB,EAAV,CAAxC,EAA7B,CAAxB,CAEA,GAAIgB,YAAY,GAAKD,CAAC,CAACG,MAAF,CAASI,KAA1B,EAAmCN,YAAY,CAACN,MAAb,CAAsB,GAA7D,CAAkE,CAC9DS,kBAAkB,CAACC,iBAAD,CAAlB,CAAsCjB,OAAtC,CAAgDa,YAAY,CAACL,SAAb,CAAuB,CAAvB,CAAyB,GAAzB,EAAgC,KAAhF,CACH,CAFD,IAEO,CACHQ,kBAAkB,CAACC,iBAAD,CAAlB,CAAsCjB,OAAtC,CAAgDa,YAAhD,CACH,CACD,MAAKH,QAAL,CAAc,CAACnB,cAAc,CAAEyB,kBAAjB,CAAd,EACAJ,CAAC,CAACG,MAAF,CAASK,IAAT,GACH,CAzEkB,OA2EnBC,WA3EmB,CA2EL,UAAM,CAChB;AACA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAI,MAAK9B,KAAL,CAAWD,cAAf,CAA+B,CAC3B+B,MAAM,CAAG,MAAK9B,KAAL,CAAWD,cAAX,CAA0BgC,GAA1B,CAA8B,SAAA5B,IAAI,CAAI,CAC3C,mBACI,oCACI,aAAK,SAAS,CAAC,WAAf,wBACI,aAAK,SAAS,CAAC,KAAf,wBACI,cAAO,SAAS,CAAC,UAAjB,CAA4B,KAAK,CAAE,CAAC6B,SAAS,CAAE,MAAZ,CAAoBC,QAAQ,CAAE,MAA9B,CAAnC,UAA2E9B,IAAI,CAACI,KAAhF,EADJ,cAEI,YAAK,SAAS,CAAC,UAAf,EAFJ,cAGI,aAAK,SAAS,CAAC,QAAf,wBACI,eAAO,SAAS,CAAC,KAAjB,gBAA0BJ,IAAI,CAACG,IAA/B,GADJ,cAEI,eAAO,SAAS,CAAC,KAAjB,CAAuB,KAAK,CAAE,CAAC0B,SAAS,CAAE,OAAZ,CAA9B,oBAA2D7B,IAAI,CAACM,YAAL,CAAkBO,SAAlB,CAA4B,CAA5B,CAA+B,EAA/B,CAA3D,GAFJ,GAHJ,GADJ,cASI,YAAK,SAAS,CAAC,UAAf,uBACI,KAAC,gBAAD,EAAkB,EAAE,CAAEb,IAAI,CAACE,EAA3B,CAA+B,QAAQ,CAAE,IAAzC,CAA+C,KAAK,CAAEF,IAAI,CAACK,OAA3D,CAAoE,OAAO,CAAE,iBAACY,CAAD,CAAO,CAAC,MAAKD,UAAL,CAAgBC,CAAhB,EAAmB,CAAxG,CAA0G,KAAK,CAAE,CAACc,MAAM,CAAE,SAAT,CAAjH,EADJ,EATJ,GAAgC/B,IAAI,CAACE,EAArC,CADJ,cAcI,YAAK,SAAS,CAAC,UAAf,YAAkCF,IAAI,CAACE,EAAvC,WAdJ,aAAaF,IAAI,CAACE,EAAlB,eADJ,CAmBH,CApBQ,CAAT,CAqBH,CAED,mBACI,qBACKyB,MADL,EADJ,CAKH,CA3GkB,CAEf,MAAK9B,KAAL,CAAa,CACTC,KAAK,CAAE,IADE,CAETU,SAAS,CAAE,IAFF,CAGTZ,cAAc,CAAE,IAHP,CAAb,CAFe,aAOlB,C,2DAED,4BAAoB,iBAChB;AACAN,KAAK,CAAC0C,GAAN,WAAaxC,IAAb,sBAAqCyC,IAArC,CAA0C,SAACC,GAAD,CAAS,CAC/C,MAAI,CAACnB,QAAL,CAAc,CAAEjB,KAAK,CAAEoC,GAAG,CAACC,IAAJ,CAASC,OAAT,EAAT,CAAd,EACA;AACH,CAHD,EAGGH,IAHH,CAII3C,KAAK,CAAC0C,GAAN,WAAaxC,IAAb,sBAAqCyC,IAArC,CAA0C,SAACC,GAAD,CAAS,CAC/C,MAAI,CAACnB,QAAL,CAAc,CAAEP,SAAS,CAAE0B,GAAG,CAACC,IAAjB,CAAd,EACA,MAAI,CAACxC,oBAAL,GACH,CAHD,CAJJ,EASH,CAED;sBAwFA,iBAAS,iBAEL,mBACI,aAAK,SAAS,CAAC,eAAf,wBACI,+CADJ,CAGM,UAAM,CACJ,OAAQ,MAAI,CAACE,KAAL,CAAWC,KAAnB,EACI,IAAK,KAAL,CACI,mBACI,cADJ,CAIJ,QACI,mBACI,kCACI,KAAC,MAAD,CAAM,WAAN,IADJ,EADJ,CAPR,CAaH,CAdA,EAHL,GADJ,CAqBH,C,2BAtIuBX,S,EAyI5B,cAAeM,CAAAA,aAAf,CAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, {Component, useState, useEffect} from \"react\";\nimport Axios from 'axios';\nimport './App.css';\nimport TextareaAutosize from 'react-textarea-autosize';\nconst port = \"http://localhost:8080\"\n\n\nclass _Content_page extends Component{\n    constructor(props) {\n        super(props);\n        this.state = { \n            posts: null,\n            usernames: null,\n            displayedPosts: null\n        }\n    }\n\n    componentDidMount() {\n        //fetch all posts here\n        Axios.get(`${port}/api/getallposts`).then((res) => {\n            this.setState({ posts: res.data.reverse()})\n            // console.log(this.state.posts)\n        }).then(\n            Axios.get(`${port}/api/getallusers`).then((res) => {          \n                this.setState({ usernames: res.data })\n                this.updateDisplayedPosts();\n            })\n        )\n    }\n\n    //update property where posts are pulled from when rendering page\n    updateDisplayedPosts = () => {\n        let displayedPosts = [];\n\n        this.state.posts.forEach(post => {\n            let thisPost = {\n                id: \"\",\n                user: \"\",\n                title: \"\",\n                content: \"\",\n                creationDate: \"\"                \n            }\n\n            let username = this.state.usernames.find((user) => {\n                return (user.id === post.userId)\n            }).username\n\n            let curtailedContent;\n            if(post.content.length > 100) {\n                curtailedContent = post.content.substring(0,100) + \"...\";\n            } else {\n                curtailedContent = post.content\n            }\n\n            thisPost.id = post.id;\n            thisPost.user = username;\n            thisPost.title = post.title;\n            thisPost.content = curtailedContent;\n            thisPost.creationDate = post.creationDate;\n\n            displayedPosts.push(thisPost);\n        });\n        this.setState({displayedPosts: displayedPosts})\n    }\n\n    expandPost = (e) => {\n        let expandedText = this.state.posts.find((post) => {\n            return(\n                parseInt(post.id) === parseInt(e.target.id)\n            )\n        }).content;\n        let tempDisplayedPosts = this.state.displayedPosts;\n        let expandedTextIndex = tempDisplayedPosts.findIndex((post) => parseInt(post.id) === parseInt(e.target.id))\n\n        if (expandedText === e.target.value && expandedText.length > 100) {\n            tempDisplayedPosts[expandedTextIndex].content = expandedText.substring(0,100) + \"...\";\n        } else {\n            tempDisplayedPosts[expandedTextIndex].content = expandedText;\n        }\n        this.setState({displayedPosts: tempDisplayedPosts})\n        e.target.blur();\n    }\n\n    renderPosts = () => {\n        // console.log(this.state.posts)\n        let output = \"\"\n        if (this.state.displayedPosts) {\n            output = this.state.displayedPosts.map(post => {\n                return(\n                    <div key={`${post.id}_container`}>\n                        <div className=\"container\" key={post.id}>\n                            <div className='row'>\n                                <label className=\"col-md-6\" style={{textAlign: \"left\", fontSize: \"28px\"}}>{post.title}</label>\n                                <div className=\"col-md-3\"></div>\n                                <div className=\"col-md\">\n                                    <label className=\"row\">- {post.user}</label>\n                                    <label className=\"row\" style={{textAlign: \"right\"}}>Date: {post.creationDate.substring(0, 10)}</label>\n                                </div>\n                            </div>\n                            <div className='row pb-4'>\n                                <TextareaAutosize id={post.id} readOnly={true} value={post.content} onFocus={(e) => {this.expandPost(e)}} style={{cursor: \"pointer\"}}></TextareaAutosize>\n                            </div>\n                        </div>\n                        <div className=\"row mb-3\" key={`${post.id}_space`}></div>\n                    </div>\n    \n                )\n            });\n        }\n\n        return(\n            <div>\n                {output}\n            </div>\n        );\n    }   \n\n\n    render() {\n\n        return(\n            <div className=\"content_page>\">\n                <h2>Content for Consumption</h2>\n\n                {(() => {\n                    switch (this.state.posts) {\n                        case null:\n                            return(\n                                <div>\n                                </div>\n                            )\n                        default:\n                            return (\n                                <div>\n                                    <this.renderPosts />\n                                </div>\n                            )\n                    }\n                })()}\n            </div>\n        )\n    }\n}\n\nexport default _Content_page;\n\n\n\n\n//USER STORIES\n//As a visitor I want to be able to view all posts created by all users so that I can consume content.\n//Unauthenticated users should be able to view all posts, and any single post.\n//The posts should only display the first 100 characters with “...” at the end if they are longer than 100 characters.\n\n//As a visitor I want to be able to view a specific post created by all users so that I can consume content.\n//Unauthenticated users should be able to view all posts, and any single post.\n//As a blogger I want to be able to view all posts created by all users so that I can see other people’s content.\n//Unauthenticated users should be able to view all posts, and any single post.\n\n\n"]},"metadata":{},"sourceType":"module"}